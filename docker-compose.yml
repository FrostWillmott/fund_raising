#services:
#  web:
#    build: .
#    command: >
#      bash -c "python manage.py migrate &&
#               python manage.py runserver 0.0.0.0:8000"
#    volumes:
#      - .:/app:rw
#    ports:
#      - "8000:8000"
#    env_file:
#      - .env
#    depends_on:
#          mysql:
#            condition: service_healthy
#          redis:
#            condition: service_started
#
#  worker:
#    build: .
#    command: celery -A fund_raising worker --loglevel=info
#    volumes:
#      - .:/app
#    env_file:
#      - .env
#    depends_on:
#      - web
#      - redis
#
#  beat:
#    build: .
#    command: celery -A fund_raising beat --loglevel=info
#    volumes:
#      - .:/app
#    env_file:
#      - .env
#    depends_on:
#      - web
#      - redis
#
#  mysql:
#    image: mysql:latest
#    env_file:
#      - .env
#    volumes:
#      - mysql_data:/var/lib/mysql
#    ports:
#      - "3306:3306"
#    healthcheck:
#      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
#      interval: 5s
#      timeout: 5s
#      retries: 10
#
#  redis:
#    image: redis:latest
#    ports:
#      - "6379:6379"
#
#services:
#  mailhog:
#    image: mailhog/mailhog
#    ports:
#      - "8025:8025"
#      - "1025:1025"
#    environment:
#      MH_STORAGE: mongodb
#      MH_MONGO_URI: mongodb://mongo:27017/mailhog
#    depends_on:
#      - mongo
#
#  mongo:
#    image: mongo:latest
#    volumes:
#      - mongo_data:/data/db
#
#volumes:
#  mongo_data:
#  mysql_data:
#

services:
  web:
    build: .
    command: >
      bash -c "python manage.py migrate &&
               python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app:rw
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
          mysql:
            condition: service_healthy
          redis:
            condition: service_started

  worker:
    build: .
    command: celery -A fund_raising worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - web
      - redis

  beat:
    build: .
    command: celery -A fund_raising beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - web
      - redis

  mysql:
    image: mysql:latest
    env_file:
      - .env
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
      - "1025:1025"
    environment:
      MH_STORAGE: mongodb
      MH_MONGO_URI: mongodb://mongo:27017/mailhog
    depends_on:
      - mongo

  mongo:
    image: mongo:latest
    volumes:
      - mongo_data:/data/db

volumes:
  mongo_data:
  mysql_data: